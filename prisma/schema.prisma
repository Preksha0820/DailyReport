generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int      @id @default(autoincrement())
  name        String
  email       String   @unique
  password    String
  role        Role
  teamLeadId  Int?     
  teamLead    User?    @relation("TeamLead", fields: [teamLeadId], references: [id])
  teamMembers User[]   @relation("TeamLead")
  reports     Report[]
  assignedTasks Task[] @relation("AssignedTo")
  givenTasks    Task[] @relation("AssignedBy")
  createdAt   DateTime @default(now())
}

model Report {
  id         Int          @id @default(autoincrement())
  user       User         @relation(fields: [userId], references: [id])
  userId     Int
  reportDate DateTime     @default(now())
  content    String
  fileURL    String?
  status     ReportStatus @default(PENDING)
  comment    String?
  createdAt  DateTime     @default(now())

  @@unique([userId, reportDate]) // Prevent duplicate reports for same user on same date
}


model Task {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  assignedTo  User     @relation("AssignedTo", fields: [assignedToId], references: [id])
  assignedToId Int
  assignedBy  User     @relation("AssignedBy", fields: [assignedById], references: [id])
  assignedById Int
  deadline    DateTime
  status      TaskStatus @default(PENDING)
  createdAt   DateTime @default(now())
}

enum Role {
  EMPLOYEE
  TEAM_LEAD
}

enum ReportStatus {
  PENDING
  APPROVED
  REJECTED
}

enum TaskStatus {
  PENDING
  COMPLETED
}
